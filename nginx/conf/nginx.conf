worker_processes 4;

events { worker_connections 1024; }

http {

  # Login #
  server {
    listen 80;
    server_name login.seedtag.local;

    location / {
      proxy_pass http://user-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
    }
    location /static {
      proxy_pass http://user-service:3000/static;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
  }

  # studio #
  server {
     listen 80;
     server_name studio.seedtag.local;

     location / {
       proxy_pass http://studio-client:3000;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       include cors_settings.conf;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
     }
   }

   server {
     listen 80;
     server_name studio.api.seedtag.local;

     location / {
       proxy_pass http://studio-service:3000;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       include cors_settings.conf;
     }

     location /creatives {
       proxy_pass http://studio-service:3000/creatives;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       include cors_settings.conf;
     }

     location /template_lib {
       proxy_pass http://studio-service:3000/template_lib;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       include cors_settings.conf;
     }
   }

  # Backoffice #
  server {
    listen 80;
    server_name admin.seedtag.local;

    location / {
      proxy_pass http://backoffice-client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Tag-manager #
  server {
    listen 80;
    server_name tms.api.seedtag.local;

    location / {
      proxy_pass http://tag-manager-service:3000/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /api {
      proxy_pass http://tag-manager-service:3000/api;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    location /explorer {
      proxy_pass http://tag-manager-service:3000/explorer;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Sherlock #
  server {
    listen 80;
    server_name sherlock.api.seedtag.local;

    location / {
      proxy_pass http://sherlock-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Tagging #
  server {
    listen 80;
    server_name tagging.api.seedtag.local;

    location / {
      proxy_pass http://tagging-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Events #
  server {
    listen 80;
    server_name e.api.seedtag.local;

    location / {
      proxy_pass http://event-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Error #
  server {
    listen 80;
    server_name error.seedtag.local;

    location / {
      proxy_pass http://error-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  server {
      listen 80 default_server;
  }
}

daemon off;
