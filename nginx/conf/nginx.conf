worker_processes 4;

events { worker_connections 1024; }

http {

  # Login #
  server {
    listen 80;
    server_name login.seedtag.local;

    location / {
      proxy_pass http://user-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
    }
    location /static {
      proxy_pass http://user-service:3000/static;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
  }

  # studio #

  server {
    listen 80;
    server_name studio.api.seedtag.local;

    location / {
      proxy_pass http://studio-service:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
    }

    location /creatives {
      proxy_pass http://studio-service:3000/creatives;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
    }

    location /template_lib {
      proxy_pass http://studio-service:3000/template_lib;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
    }
  }

  # server {
  #    listen 80;
  #    server_name studio.seedtag.local;
  #
  #    location / {
  #      proxy_pass http://studio-client:3000;
  #      proxy_http_version 1.1;
  #      proxy_set_header Host $host;
  #      include cors_settings.conf;
  #      proxy_set_header Upgrade $http_upgrade;
  #      proxy_set_header Connection "upgrade";
  #    }
  #  }

  # Backoffice #
  # server {
  #   listen 80;
  #   server_name admin.seedtag.local;

  #   location / {
  #     proxy_pass http://backoffice-client:3000;
  #     proxy_http_version 1.1;
  #     proxy_set_header Host $host;
  #     include cors_settings.conf;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection "upgrade";
  #   }
  # }

  # Publisher panel #
  # server {
  #   listen 80;
  #   server_name publishers.seedtag.local;
  #
  #   location / {
  #     proxy_pass http://publisher-panel-client:3000;
  #     proxy_http_version 1.1;
  #     proxy_set_header Host $host;
  #     include cors_settings.conf;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection "upgrade";
  #   }
  # }


  # Gohan - Client #
  # server {
  #   listen 80;
  #   server_name client.seedtag.local;
  #
  #   location / {
  #     proxy_pass http://gohan-client:8886/;
  #     proxy_http_version 1.1;
  #     proxy_set_header Host $host;
  #     include cors_settings.conf;
  #   }
  # }

  # Tag-manager #
  server {
    listen 80;
    server_name tms.api.seedtag.local;

    location / {
      proxy_pass http://tag-manager-service:3000/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /api {
      proxy_pass http://tag-manager-service:3000/api;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
    location /explorer {
      proxy_pass http://tag-manager-service:3000/explorer;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Sherlock #
  server {
    listen 80;
    server_name sherlock.api.seedtag.local;

    location / {
      proxy_pass http://sherlock-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Tagging #
  server {
    listen 80;
    server_name tagging.api.seedtag.local;

    location / {
      proxy_pass http://tagging-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Events Big data #
  server {
    listen 80;
    server_name e2.api.seedtag.local;

    location / {
      proxy_pass http://event-bigdata-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Analytics #
  server {
    listen 80;
    server_name analytics.api.seedtag.local;

    location / {
      proxy_pass http://analytics-service:3000/public/;
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Error #
  server {
    listen 80;
    server_name errors.api.seedtag.local;

    location / {
      proxy_pass http://error-service:3000/public/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  # Campaign #
  server {
    listen 80;
    server_name campaigns.api.seedtag.local;

    location / {
      proxy_pass http://campaign-service:3000/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }
  
  # Custom Categories #
  server {
    listen 80;
    server_name custom-categories.api.seedtag.local;

    location / {
      proxy_pass http://custom-categories-service:3000/api;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      include cors_settings.conf;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  # CustomCategories #
    server {
      listen 80;
      server_name custom-categories.api.seedtag.local;

      location / {
        proxy_pass http://custom-categories-service:3000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        include cors_settings.conf;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

    }

  server {
      listen 80 default_server;
  }
}

daemon off;
