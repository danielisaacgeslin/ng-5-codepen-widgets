worker_processes 4;

events { worker_connections 1024; }

http {

  # Set hostname to variable to lazyly resolve it and allow starting nginx
  # Login #
  server {
    listen 80;
    server_name login.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client user-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
    location /static {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client user-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
  }

  # studio #

  server {
    listen 80;
    server_name studio.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client studio-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      client_max_body_size 200M;
    }
  }

  server {
    listen 80;
    server_name studio.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client studio-client;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Backoffice #
  server {
    listen 80;
    server_name admin.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client backoffice;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Publisher panel #
  server {
    listen 80;
    server_name publishers.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client publisher-panel;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }


  # Gohan - Client #
  server {
    listen 80;
    server_name client.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client gohan;
      proxy_pass http://$upstream_client:8886;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
    }
  }

  # Tag-manager #
  server {
    listen 80;
    server_name tms.api.seedtag.local;

    location /public {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client tag-manager-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /api/Templates {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client tag-manager-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /api/Adunits {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client tag-manager-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location / {
      include cors_settings_internal_domains.conf;
      # include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client tag-manager-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Sherlock #
  server {
    listen 80;
    server_name sherlock.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client sherlock-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Tagging #
  server {
    listen 80;
    server_name tagging.api.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client tagging-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Events Big data #
  server {
    listen 80;
    server_name e2.api.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client event-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Events Big data #
  server {
    listen 80;
    server_name e.api.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client event-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Analytics #
  server {
    listen 80;
    server_name analytics.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client analytics-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Error #
  server {
    listen 80;
    server_name errors.api.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client error-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  # Campaign #
  server {
    listen 80;
    server_name campaigns.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client campaign-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

  }

  # Custom Categories #
  server {
    listen 80;
    server_name custom-categories.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client custom-categories-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Blacklist
  server {
    listen 80;
    server_name blacklist.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client blacklist-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Real time logs Service
  server {
    listen 80;
    server_name realtimelogs.api.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client real-time-logs-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }


  # Audit service
  server {
    listen 80;
    server_name audit.api.seedtag.local;

    location / {
      include cors_settings_internal_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client audit-service;
      rewrite ^/(.*)$ /public/$1 break;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # Creative preview
  server {
    listen 80;
    server_name preview.seedtag.local;

    location / {
      include cors_settings_external_domains.conf;
      resolver 127.0.0.11 valid=30s;
      set $upstream_client creative-preview-service;
      proxy_pass http://$upstream_client:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
      listen 80 default_server;
  }
}

daemon off;
